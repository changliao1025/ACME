#! /bin/csh -f

#################################################################################
if ($PHASE == set_batch) then
#################################################################################

source ./Tools/ccsm_getenv || exit -1

set maxthrds = 0
@ n = 0
foreach model ($MODELS)
  @ n = $n + 1
  if ($NTHRDS[$n] > $MAX_TASKS_PER_NODE ) then
     echo "ERROR, NTHRDS maximum is $MAX_TASKS_PER_NODE"
     echo "you have set NTHRDS = ( $NTHRDS[$n] ) - must reset"
     exit 1
  endif   
  if ($NTHRDS[$n] > $maxthrds) then
     set maxthrds = $NTHRDS[$n]
  endif
end

set npes_tot = `${CASEROOT}/Tools/taskmaker.pl -sumonly`

@ nodes = $npes_tot / $MAX_TASKS_PER_NODE
@ tmpValue = $nodes * $MAX_TASKS_PER_NODE
if( $tmpValue < $npes_tot ) then
  @ nodes = $nodes + 1
endif

# If tasks must be equivalent to full nodes:
@ mpp = $npes_tot
###@ mpp = $nodes * $MAX_TASKS_PER_NODE

if ($?TESTMODE) then
 set file = $CASEROOT/${CASE}.test 
else
 set file = $CASEROOT/${CASE}.run 
endif

cat >! $file << EOF1
#! /bin/csh -f

#PBS -m abe
#PBS -S /bin/bash
#PBS -l nodes=${nodes}:ppn=64
#PBS -l walltime=960:00:00
#PBS -j oe
#PBS -N acme.exe
#PBS -o \$PBS_JOBID.out
#PBS -M wlin@bnl.gov

# End of options

limit coredumpsize 1000000
limit stacksize unlimited
setenv OMP_STACKSIZE 1000M
setenv LD_LIBRARY_PATH /software/apps/netcdf4/lib:$LD_LIBRARY_PATH
EOF1


#################################################################################
else if ($PHASE == set_exe) then
#################################################################################

cat >> ${CASEROOT}/${CASE}.run << EOF1

echo " "
echo "Here are the environment variables"
echo " "
env | sort
echo " "
set sleeptime = 10
echo "Getting ready to sleep for \$sleeptime seconds"
sleep \$sleeptime
echo "Awakening after \$sleeptime seconds"
echo " "

cd \$RUNDIR
echo "`date` -- CSM EXECUTION BEGINS HERE" 
if (\$MPILIB != "mpi-serial") then
   mpirun \$EXEROOT/cesm.exe >&! cesm.log.\$LID
   wait
else
   \$EXEROOT/cesm.exe  >&! cesm.log.\$LID
endif
echo "`date` -- CSM EXECUTION HAS FINISHED" 

EOF1


#################################################################################
else if ($PHASE == set_larch) then
#################################################################################

   #This is a long-term archiving script on sierra

if (-e ${CASEROOT}/${CASE}.l_archive) then
   echo ERROR: generate_batch.csh file ${CASE}.l_archive already exists in 
${CASEROOT}
   exit -
1                                                                            
endif                                                                            
     

# Create the archive script
touch ${CASEROOT}/${CASE}.l_archive
chmod 775 ${CASEROOT}/${CASE}.l_archive

cat >> $CASEROOT/${CASE}.l_archive << EOF1
#! /bin/csh -f                            
#-----------------------------------------------------------------------
                
#PBS -m abe
#PBS -S /bin/bash
#PBS -l nodes=1
#PBS -l walltime=2:00:00
#PBS -j oe
#PBS -N archive
#PBS -o \$PBS_JOBID.out
#PBS -M wlin@bnl.gov

# Determine necessary environment 
variables                                             
#-----------------------------------------------------------------------
                

cd $CASEROOT

source ./Tools/ccsm_getenv || exit -1

#----------------------------------------------
# run the long term archiver
#----------------------------------------------

cd \$DOUT_S_ROOT
\$CASEROOT/Tools/lt_archive.sh -m copy_dirs_hsi
exit 0

EOF1


#################################################################################
else
#################################################################################

    echo "  PHASE setting of $PHASE is not an accepted value"
    echo "  accepted values are set_batch, set_exe and set_larch"
    exit 1

#################################################################################
endif
#################################################################################
 

